{"version":3,"file":"static/js/618.bba36ee5.chunk.js","mappings":"+OAiB0B,SAEXA,IAAU,4CAkBxB,OAlBwB,0BAAzB,2GACyBC,MAAM,gCAAgC,KAAD,EAA9C,IAARC,EAAQ,QAEAC,GAAG,CAAD,qBAKRC,EAAAA,EAAAA,IACJ,CAAEC,QAAS,2BACX,CACEC,OAAQ,MAEV,KAAD,kBAEqBJ,EAASE,OAAO,KAAD,EAAxB,OAAPG,EAAO,yBACNA,EAAQC,QAAM,6CAExB,sBAEM,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAM,CACXF,OAAQR,KAEZ,CA1BA,UAZA,WACE,IAAQQ,GAAWG,EAAAA,EAAAA,MAAXH,OAER,OACE,SAAC,EAAAI,SAAQ,CAACC,UAAU,cAAGC,MAAO,CAAEC,UAAW,UAAW,SAAC,eAAe,UACpE,SAAC,KAAK,CAACC,QAASR,EAAO,SACpB,SAACS,GAAY,OAAK,SAAC,IAAU,CAACT,OAAQS,GAAgB,KAI/D,C","sources":["pages/Events.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  return (\n    <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json(\n      { message: 'Could not fetch events.' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport function loader() {\n  return defer({\n    events: loadEvents(),\n  });\n}\n"],"names":["loadEvents","fetch","response","ok","json","message","status","resData","events","loader","defer","useLoaderData","Suspense","fallback","style","textAlign","resolve","loadedEvents"],"sourceRoot":""}